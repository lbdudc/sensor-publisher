/*% if (feature.MWM_TrajectoryExploitation) { %*/
const updateLayer = (receivedLayer, list, featureFn) => {
  return receivedLayer.getLayer().then(layer => {
    let idsMap = [];
    layer.eachLayer(subLayer => {
      if (!list.find(e => e.id == subLayer.feature.id)) {
        layer.removeLayer(subLayer._leaflet_id);
      } else {
        idsMap.push(subLayer.feature.id);
      }
    });
    list.forEach(item => {
      if (!idsMap.includes(item.id)) {
        layer.addData(featureFn(item));
      }
    });
  });
};
  
  export default updateLayer;
/*% } %*/