/*% if (feature.MWM_TE_Statistics || feature.MWM_TE_ActivitiesRecord) { %*/
package es.udc.lbd.gema.lps.component.trajectory_exploitation;

import es.udc.lbd.gema.lps.component.gema.model.service.ActivityCategoryService;
import es.udc.lbd.gema.lps.component.gema.model.service.dto.ActivityCategoryDTO;
import es.udc.lbd.gema.lps.component.gema.model.domain.ActivityCategory;
import java.util.List;
import javax.inject.Inject;
import org.locationtech.jts.geom.Geometry;
import org.locationtech.jts.io.ParseException;
import org.locationtech.jts.io.WKTReader;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping(ActivityCategoryResource.ACTIVITY_CATEGORY_RESOURCE_URL)
public class ActivityCategoryResource {

  public static final String ACTIVITY_CATEGORY_RESOURCE_URL = "/api/trajectory_exploitation/activity_categories/";

  private static final Logger log = LoggerFactory.getLogger(ActivityCategoryResource.class);

  @Inject private ActivityCategoryService activityCategoryService;

  @GetMapping
  public ResponseEntity<List<ActivityCategoryDTO>> findAll() {

    List<ActivityCategoryDTO> activityCategoriesDTO;

    activityCategoriesDTO = activityCategoryService.findAll();

    return new ResponseEntity<>(activityCategoriesDTO, HttpStatus.OK);
  }
}
/*% } %*/
